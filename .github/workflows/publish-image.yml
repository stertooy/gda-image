name: Publish GAP Docker image

on:
  workflow_dispatch:
    inputs:
      VERSION:
        required: true
        type: choice
        options: ["master","4.12.0","4.12.1","4.12.2","4.13.0","4.13.1","4.14.0","4.15.0"]
      TYPE:
        required: true
        type: choice
        options: ["slim","full"]
  workflow_call:
    inputs:
      VERSION:
        required: true
        type: string
      TYPE:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Publish GAP-${{ inputs.BRANCH }} Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup build-args
        shell: bash
        run: |
          # Add BASE_IMAGE
          BASE_IMAGE=$(grep "${{ inputs.VERSION }}=" BASE_IMAGE.txt | cut -d'=' -f2 | xargs)
          echo $BASE_IMAGE
          echo "BASE_IMAGE=$BASE_IMAGE" >> "$GITHUB_ENV"
          
          # Add PACKAGES
          PACKAGES=$(tr "\n" " " < ${{ inputs.TYPE }}/PACKAGES.txt || :)
          echo $PACKAGES
          echo "PACKAGES=$PACKAGES" >> "$GITHUB_ENV"
          
          # Add GAPDEPS
          GAPDEPS=$(grep "${{ inputs.VERSION }}=" ${{ inputs.TYPE }}/GAPDEPS.txt | cut -d'=' -f2)
          echo $GAPDEPS
          echo "GAPDEPS=$GAPDEPS" >> "$GITHUB_ENV"
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
            ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=raw,value=${{ inputs.VERSION }}-${{ inputs.TYPE }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            VERSION=${{ inputs.VERSION }}
            PACKAGES=${{ env.PACKAGES }}
            GAPDEPS=${{ env.GAPDEPS }}
            
